{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive, Input, EventEmitter, Component, Optional, Inject, Output, HostListener, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from '@angular/platform-browser';\n\nfunction AngularImageViewerComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵelement(1, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AngularImageViewerComponent_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function AngularImageViewerComponent_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.rotateCounterClockwise());\n    });\n    i0.ɵɵelement(1, \"span\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.config.btnClass);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(ctx_r1.config.btnIcons.rotateCounterClockwise);\n  }\n}\n\nfunction AngularImageViewerComponent_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function AngularImageViewerComponent_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.rotateClockwise());\n    });\n    i0.ɵɵelement(1, \"span\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r2.config.btnClass);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(ctx_r2.config.btnIcons.rotateClockwise);\n  }\n}\n\nfunction AngularImageViewerComponent_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function AngularImageViewerComponent_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.zoomOut());\n    });\n    i0.ɵɵelement(1, \"span\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r3.config.btnClass);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(ctx_r3.config.btnIcons.zoomOut);\n  }\n}\n\nfunction AngularImageViewerComponent_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function AngularImageViewerComponent_button_7_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.zoomIn());\n    });\n    i0.ɵɵelement(1, \"span\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r4.config.btnClass);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(ctx_r4.config.btnIcons.zoomIn);\n  }\n}\n\nfunction AngularImageViewerComponent_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function AngularImageViewerComponent_button_8_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const cBtn_r16 = restoredCtx.$implicit;\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.fireCustomEvent(cBtn_r16.name, ctx_r17.index));\n    });\n    i0.ɵɵelement(1, \"span\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const cBtn_r16 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r5.config.btnClass);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(cBtn_r16.icon);\n  }\n}\n\nfunction AngularImageViewerComponent_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function AngularImageViewerComponent_button_9_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.toggleFullscreen());\n    });\n    i0.ɵɵelement(1, \"span\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r6.config.btnClass);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(ctx_r6.config.btnIcons.fullscreen);\n  }\n}\n\nfunction AngularImageViewerComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function AngularImageViewerComponent_div_10_Template_button_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.prevImage($event));\n    });\n    i0.ɵɵelement(2, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function AngularImageViewerComponent_div_10_Template_button_click_3_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.nextImage($event));\n    });\n    i0.ɵɵelement(4, \"span\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(ctx_r7.config.btnClass);\n    i0.ɵɵproperty(\"disabled\", ctx_r7.index === 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(ctx_r7.config.btnIcons.prev);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(ctx_r7.config.btnClass);\n    i0.ɵɵproperty(\"disabled\", ctx_r7.index === ctx_r7.src.length - 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(ctx_r7.config.btnIcons.next);\n  }\n}\n\nclass CustomImageEvent {\n  constructor(name, imageIndex) {\n    this.name = name;\n    this.imageIndex = imageIndex;\n  }\n\n}\n\nclass FullScreenDirective {\n  constructor(el) {\n    this.el = el;\n  }\n\n  ngOnChanges(changes) {\n    if (!changes[\"fullscreenState\"].isFirstChange()) {\n      if (this.fullscreenState) {\n        const element = this.el.nativeElement;\n        const requestMethod = element.requestFullscreen || element.webkitRequestFullScreen || element.mozRequestFullScreen || element.msRequestFullScreen;\n\n        if (requestMethod) {\n          // Native full screen.\n          requestMethod.call(element);\n        } else {\n          return null;\n        }\n      } else {\n        const element = document;\n        const requestMethod = element.cancelFullscreen || element.webkitExitFullscreen || element.webkitCancelFullScreen || element.mozCancelFullScreen || element.msExitFullScreen;\n\n        if (requestMethod) {\n          // Native Cancel full screen.\n          requestMethod.call(element);\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  ngOnInit() {}\n\n}\n\nFullScreenDirective.ɵfac = function FullScreenDirective_Factory(t) {\n  return new (t || FullScreenDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nFullScreenDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: FullScreenDirective,\n  selectors: [[\"\", \"appScreenfull\", \"\"]],\n  inputs: {\n    fullscreenState: [\"appScreenfull\", \"fullscreenState\"]\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FullScreenDirective, [{\n    type: Directive,\n    args: [{\n      selector: \"[appScreenfull]\"\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    fullscreenState: [{\n      type: Input,\n      args: [\"appScreenfull\"]\n    }]\n  });\n})();\n\nconst DEFAULT_CONFIG = {\n  btnClass: \"default\",\n  zoomFactor: 0.1,\n  containerBackgroundColor: \"#ccc\",\n  wheelZoom: false,\n  allowFullscreen: true,\n  allowKeyboardNavigation: true,\n  btnShow: {\n    zoomIn: true,\n    zoomOut: true,\n    rotateClockwise: true,\n    rotateCounterClockwise: true,\n    next: true,\n    prev: true\n  },\n  btnIcons: {\n    zoomIn: \"fa fa-plus\",\n    zoomOut: \"fa fa-minus\",\n    rotateClockwise: \"fa fa-repeat\",\n    rotateCounterClockwise: \"fa fa-undo\",\n    next: \"fa fa-arrow-right\",\n    prev: \"fa fa-arrow-left\",\n    fullscreen: \"fa fa-arrows-alt\"\n  }\n};\n\nclass AngularImageViewerComponent {\n  constructor(moduleConfig, sanitizer) {\n    this.moduleConfig = moduleConfig;\n    this.sanitizer = sanitizer;\n    this.index = 0;\n    this.indexChange = new EventEmitter();\n    this.configChange = new EventEmitter();\n    this.customImageEvent = new EventEmitter();\n    this.styleHeight = \"98vh\";\n    this.style = {\n      transform: \"\",\n      msTransform: \"\",\n      oTransform: \"\",\n      webkitTransform: \"\"\n    };\n    this.fullscreen = false;\n    this.loading = true;\n    this.scale = 1;\n    this.rotation = 0;\n    this.translateX = 0;\n    this.translateY = 0;\n    this.hovered = false;\n  }\n\n  ngOnChanges(changes) {\n    if (changes.screenHeightOccupied) {\n      this.styleHeight = \"calc(98vh - \" + this.screenHeightOccupied + \"px)\";\n    }\n  }\n\n  ngOnInit() {\n    const merged = this.mergeConfig(DEFAULT_CONFIG, this.moduleConfig);\n    this.config = this.mergeConfig(merged, this.config);\n    this.triggerConfigBinding();\n  }\n\n  nextImage(event) {\n    if (this.canNavigate(event) && this.index < this.src.length - 1) {\n      this.loading = true;\n      this.index++;\n      this.triggerIndexBinding();\n      this.reset();\n    }\n  }\n\n  prevImage(event) {\n    if (this.canNavigate(event) && this.index > 0) {\n      this.loading = true;\n      this.index--;\n      this.triggerIndexBinding();\n      this.reset();\n    }\n  }\n\n  zoomIn() {\n    this.scale *= 1 + this.config.zoomFactor;\n    this.updateStyle();\n  }\n\n  zoomOut() {\n    if (this.scale > this.config.zoomFactor) {\n      this.scale /= 1 + this.config.zoomFactor;\n    }\n\n    this.updateStyle();\n  }\n\n  scrollZoom(evt) {\n    if (this.config.wheelZoom) {\n      evt.deltaY > 0 ? this.zoomOut() : this.zoomIn();\n      return false;\n    }\n  }\n\n  rotateClockwise() {\n    this.rotation += 90;\n    this.updateStyle();\n  }\n\n  rotateCounterClockwise() {\n    this.rotation -= 90;\n    this.updateStyle();\n  }\n\n  onLoad(url) {\n    this.loading = false;\n  }\n\n  onLoadStart(url) {\n    this.loading = true;\n  }\n\n  imageNotFound(url) {}\n\n  onDragOver(evt) {\n    this.translateX += evt.clientX - this.prevX;\n    this.translateY += evt.clientY - this.prevY;\n    this.prevX = evt.clientX;\n    this.prevY = evt.clientY;\n    this.updateStyle();\n  }\n\n  onDragStart(evt) {\n    if (evt.dataTransfer && evt.dataTransfer.setDragImage) {\n      evt.dataTransfer.setDragImage(evt.target.nextElementSibling, 0, 0);\n    }\n\n    this.prevX = evt.clientX;\n    this.prevY = evt.clientY;\n  }\n\n  toggleFullscreen() {\n    this.fullscreen = !this.fullscreen;\n\n    if (!this.fullscreen) {\n      this.reset();\n    }\n  }\n\n  triggerIndexBinding() {\n    this.indexChange.emit(this.index);\n  }\n\n  triggerConfigBinding() {\n    this.configChange.next(this.config);\n  }\n\n  fireCustomEvent(name, imageIndex) {\n    this.customImageEvent.emit(new CustomImageEvent(name, imageIndex));\n  }\n\n  reset() {\n    this.scale = 1;\n    this.rotation = 0;\n    this.translateX = 0;\n    this.translateY = 0;\n    this.updateStyle();\n  }\n\n  onMouseOver() {\n    this.hovered = true;\n  }\n\n  onMouseLeave() {\n    this.hovered = false;\n  }\n\n  canNavigate(event) {\n    return event == null || this.config.allowKeyboardNavigation && this.hovered;\n  }\n\n  updateStyle() {\n    this.style.transform = `translate(${this.translateX}px, ${this.translateY}px) rotate(${this.rotation}deg) scale(${this.scale})`;\n    this.style.msTransform = this.style.transform;\n    this.style.webkitTransform = this.style.transform;\n    this.style.oTransform = this.style.transform;\n  }\n\n  mergeConfig(defaultValues, overrideValues) {\n    let result = Object.assign({}, defaultValues);\n\n    if (overrideValues) {\n      result = Object.assign(Object.assign({}, defaultValues), overrideValues);\n\n      if (overrideValues.btnIcons) {\n        result.btnIcons = Object.assign(Object.assign({}, defaultValues.btnIcons), overrideValues.btnIcons);\n      }\n    }\n\n    return result;\n  }\n\n}\n\nAngularImageViewerComponent.ɵfac = function AngularImageViewerComponent_Factory(t) {\n  return new (t || AngularImageViewerComponent)(i0.ɵɵdirectiveInject(\"config\", 8), i0.ɵɵdirectiveInject(i1.DomSanitizer));\n};\n\nAngularImageViewerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AngularImageViewerComponent,\n  selectors: [[\"angular-11-image-viewer\"]],\n  hostBindings: function AngularImageViewerComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keyup.ArrowRight\", function AngularImageViewerComponent_keyup_ArrowRight_HostBindingHandler($event) {\n        return ctx.nextImage($event);\n      }, false, i0.ɵɵresolveWindow)(\"keyup.ArrowLeft\", function AngularImageViewerComponent_keyup_ArrowLeft_HostBindingHandler($event) {\n        return ctx.prevImage($event);\n      }, false, i0.ɵɵresolveWindow)(\"mouseover\", function AngularImageViewerComponent_mouseover_HostBindingHandler() {\n        return ctx.onMouseOver();\n      })(\"mouseleave\", function AngularImageViewerComponent_mouseleave_HostBindingHandler() {\n        return ctx.onMouseLeave();\n      });\n    }\n  },\n  inputs: {\n    src: \"src\",\n    screenHeightOccupied: \"screenHeightOccupied\",\n    index: \"index\",\n    config: \"config\"\n  },\n  outputs: {\n    indexChange: \"indexChange\",\n    configChange: \"configChange\",\n    customImageEvent: \"customImageEvent\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 11,\n  vars: 13,\n  consts: [[1, \"img-container\", 3, \"appScreenfull\", \"wheel\", \"dragover\"], [\"alt\", \"Image not found...\", 3, \"src\", \"ngStyle\", \"dragstart\", \"load\", \"error\", \"loadstart\"], [\"class\", \"spinner-container\", 4, \"ngIf\"], [\"type\", \"button\", 3, \"class\", \"click\", 4, \"ngIf\"], [\"type\", \"button\", 3, \"class\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"id\", \"ngx-fs-btn\", 3, \"class\", \"click\", 4, \"ngIf\"], [\"class\", \"nav-button-container\", 4, \"ngIf\"], [1, \"spinner-container\"], [1, \"spinner\"], [\"type\", \"button\", 3, \"click\"], [\"type\", \"button\", \"id\", \"ngx-fs-btn\", 3, \"click\"], [1, \"nav-button-container\"], [\"type\", \"button\", 3, \"disabled\", \"click\"]],\n  template: function AngularImageViewerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"wheel\", function AngularImageViewerComponent_Template_div_wheel_0_listener($event) {\n        return ctx.scrollZoom($event);\n      })(\"dragover\", function AngularImageViewerComponent_Template_div_dragover_0_listener($event) {\n        return ctx.onDragOver($event);\n      });\n      i0.ɵɵelementStart(1, \"img\", 1);\n      i0.ɵɵlistener(\"dragstart\", function AngularImageViewerComponent_Template_img_dragstart_1_listener($event) {\n        return ctx.onDragStart($event);\n      })(\"load\", function AngularImageViewerComponent_Template_img_load_1_listener() {\n        return ctx.onLoad(ctx.src[ctx.index]);\n      })(\"error\", function AngularImageViewerComponent_Template_img_error_1_listener() {\n        return ctx.imageNotFound(ctx.src[ctx.index]);\n      })(\"loadstart\", function AngularImageViewerComponent_Template_img_loadstart_1_listener() {\n        return ctx.onLoadStart(ctx.src[ctx.index]);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"div\");\n      i0.ɵɵtemplate(3, AngularImageViewerComponent_div_3_Template, 2, 0, \"div\", 2);\n      i0.ɵɵtemplate(4, AngularImageViewerComponent_button_4_Template, 2, 4, \"button\", 3);\n      i0.ɵɵtemplate(5, AngularImageViewerComponent_button_5_Template, 2, 4, \"button\", 3);\n      i0.ɵɵtemplate(6, AngularImageViewerComponent_button_6_Template, 2, 4, \"button\", 3);\n      i0.ɵɵtemplate(7, AngularImageViewerComponent_button_7_Template, 2, 4, \"button\", 3);\n      i0.ɵɵtemplate(8, AngularImageViewerComponent_button_8_Template, 2, 4, \"button\", 4);\n      i0.ɵɵtemplate(9, AngularImageViewerComponent_button_9_Template, 2, 4, \"button\", 5);\n      i0.ɵɵtemplate(10, AngularImageViewerComponent_div_10_Template, 5, 10, \"div\", 6);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"background-color\", ctx.config.containerBackgroundColor);\n      i0.ɵɵproperty(\"appScreenfull\", ctx.fullscreen);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"src\", ctx.src[ctx.index], i0.ɵɵsanitizeUrl)(\"ngStyle\", ctx.style);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.config.btnShow.rotateCounterClockwise);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.config.btnShow.rotateClockwise);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.config.btnShow.zoomOut);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.config.btnShow.zoomIn);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.config.customBtns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.config.allowFullscreen);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.src.length > 1);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i2.NgStyle, FullScreenDirective],\n  styles: [\".img-container[_ngcontent-%COMP%]{height:100%;width:100%;overflow:hidden;position:relative}.img-container[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{z-index:2;margin:0 auto;display:block;max-width:100%;max-height:100%}.img-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{z-index:99;position:absolute;right:15px}.img-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:not(:disabled){cursor:pointer}.img-container[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]:nth-of-type(1):not(#ngx-fs-btn){bottom:15px}.img-container[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]:nth-of-type(2):not(#ngx-fs-btn){bottom:65px}.img-container[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]:nth-of-type(3):not(#ngx-fs-btn){bottom:115px}.img-container[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]:nth-of-type(4):not(#ngx-fs-btn){bottom:165px}.img-container[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]:nth-of-type(5):not(#ngx-fs-btn){bottom:215px}.img-container[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]:nth-of-type(6):not(#ngx-fs-btn){bottom:265px}.img-container[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]:nth-of-type(7):not(#ngx-fs-btn){bottom:315px}#ngx-fs-btn[_ngcontent-%COMP%]{top:15px}button.default[_ngcontent-%COMP%]{height:40px;width:40px;border:1px solid #555;border-radius:50%;background-color:#fff;opacity:.7;transition:opacity .2s}button.default[_ngcontent-%COMP%]:hover{opacity:1}button.default[_ngcontent-%COMP%]:disabled{opacity:.25}.nav-button-container[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]{position:relative;right:0;margin:0 10px}.nav-button-container[_ngcontent-%COMP%]{text-align:center;position:absolute;z-index:98;bottom:10px;left:0;right:0}.spinner-container[_ngcontent-%COMP%]{position:absolute;inset:0;width:60px;height:60px;margin:auto;padding:10px;background-color:#0006;border-radius:25%}.spinner[_ngcontent-%COMP%]{border-width:7px;border-style:solid;border-color:#ccc;border-bottom-color:#222;border-radius:50%;height:100%;width:100%;box-sizing:border-box;animation:rotation 2s linear infinite}@keyframes rotation{0%{-webkit-transform:rotate(0deg)}to{-webkit-transform:rotate(359deg)}}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularImageViewerComponent, [{\n    type: Component,\n    args: [{\n      selector: \"angular-11-image-viewer\",\n      template: \"<div\\n  [appScreenfull]=\\\"fullscreen\\\"\\n  class=\\\"img-container\\\"\\n  [style.backgroundColor]=\\\"config.containerBackgroundColor\\\"\\n  (wheel)=\\\"scrollZoom($event)\\\"\\n  (dragover)=\\\"onDragOver($event)\\\"\\n>\\n  <img\\n  [src]=\\\"src[index]\\\"\\n  [ngStyle]=\\\"style\\\"\\n  alt=\\\"Image not found...\\\"\\n  (dragstart)=\\\"onDragStart($event)\\\"\\n  (load)=\\\"onLoad(src[index])\\\"\\n  (error)=\\\"imageNotFound(src[index])\\\"\\n  (loadstart)=\\\"onLoadStart(src[index])\\\"\\n  />\\n  <!-- Div below will be used to hide the 'ghost' image when dragging -->\\n  <div></div>\\n  <div class=\\\"spinner-container\\\" *ngIf=\\\"loading\\\">\\n    <div class=\\\"spinner\\\"></div>\\n  </div>\\n\\n  <button\\n    type=\\\"button\\\"\\n    [class]=\\\"config.btnClass\\\"\\n    *ngIf=\\\"config.btnShow.rotateCounterClockwise\\\"\\n    (click)=\\\"rotateCounterClockwise()\\\"\\n  >\\n    <span [class]=\\\"config.btnIcons.rotateCounterClockwise\\\"></span>\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    [class]=\\\"config.btnClass\\\"\\n    *ngIf=\\\"config.btnShow.rotateClockwise\\\"\\n    (click)=\\\"rotateClockwise()\\\"\\n  >\\n    <span [class]=\\\"config.btnIcons.rotateClockwise\\\"></span>\\n  </button>\\n\\n  <button\\n    type=\\\"button\\\"\\n    [class]=\\\"config.btnClass\\\"\\n    *ngIf=\\\"config.btnShow.zoomOut\\\"\\n    (click)=\\\"zoomOut()\\\"\\n  >\\n    <span [class]=\\\"config.btnIcons.zoomOut\\\"></span>\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    [class]=\\\"config.btnClass\\\"\\n    *ngIf=\\\"config.btnShow.zoomIn\\\"\\n    (click)=\\\"zoomIn()\\\"\\n  >\\n    <span [class]=\\\"config.btnIcons.zoomIn\\\"></span>\\n  </button>\\n\\n  <button\\n    type=\\\"button\\\"\\n    [class]=\\\"config.btnClass\\\"\\n    *ngFor=\\\"let cBtn of config.customBtns\\\"\\n    (click)=\\\"fireCustomEvent(cBtn.name, index)\\\"\\n  >\\n    <span [class]=\\\"cBtn.icon\\\"></span>\\n  </button>\\n\\n  <button\\n    type=\\\"button\\\"\\n    id=\\\"ngx-fs-btn\\\"\\n    [class]=\\\"config.btnClass\\\"\\n    (click)=\\\"toggleFullscreen()\\\"\\n    *ngIf=\\\"config.allowFullscreen\\\"\\n  >\\n    <span [class]=\\\"config.btnIcons.fullscreen\\\"></span>\\n  </button>\\n\\n  <div class=\\\"nav-button-container\\\" *ngIf=\\\"src.length > 1\\\">\\n    <button\\n      type=\\\"button\\\"\\n      [class]=\\\"config.btnClass\\\"\\n      (click)=\\\"prevImage($event)\\\"\\n      [disabled]=\\\"index === 0\\\"\\n    >\\n      <span [class]=\\\"config.btnIcons.prev\\\"></span>\\n    </button>\\n    <button\\n      type=\\\"button\\\"\\n      [class]=\\\"config.btnClass\\\"\\n      (click)=\\\"nextImage($event)\\\"\\n      [disabled]=\\\"index === src.length - 1\\\"\\n    >\\n      <span [class]=\\\"config.btnIcons.next\\\"></span>\\n    </button>\\n  </div>\\n</div>\\n\",\n      styles: [\".img-container{height:100%;width:100%;overflow:hidden;position:relative}.img-container img{z-index:2;margin:0 auto;display:block;max-width:100%;max-height:100%}.img-container button{z-index:99;position:absolute;right:15px}.img-container button:not(:disabled){cursor:pointer}.img-container>button:nth-of-type(1):not(#ngx-fs-btn){bottom:15px}.img-container>button:nth-of-type(2):not(#ngx-fs-btn){bottom:65px}.img-container>button:nth-of-type(3):not(#ngx-fs-btn){bottom:115px}.img-container>button:nth-of-type(4):not(#ngx-fs-btn){bottom:165px}.img-container>button:nth-of-type(5):not(#ngx-fs-btn){bottom:215px}.img-container>button:nth-of-type(6):not(#ngx-fs-btn){bottom:265px}.img-container>button:nth-of-type(7):not(#ngx-fs-btn){bottom:315px}#ngx-fs-btn{top:15px}button.default{height:40px;width:40px;border:1px solid #555;border-radius:50%;background-color:#fff;opacity:.7;transition:opacity .2s}button.default:hover{opacity:1}button.default:disabled{opacity:.25}.nav-button-container>button{position:relative;right:0;margin:0 10px}.nav-button-container{text-align:center;position:absolute;z-index:98;bottom:10px;left:0;right:0}.spinner-container{position:absolute;inset:0;width:60px;height:60px;margin:auto;padding:10px;background-color:#0006;border-radius:25%}.spinner{border-width:7px;border-style:solid;border-color:#ccc;border-bottom-color:#222;border-radius:50%;height:100%;width:100%;box-sizing:border-box;animation:rotation 2s linear infinite}@keyframes rotation{0%{-webkit-transform:rotate(0deg)}to{-webkit-transform:rotate(359deg)}}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [\"config\"]\n      }]\n    }, {\n      type: i1.DomSanitizer\n    }];\n  }, {\n    src: [{\n      type: Input\n    }],\n    screenHeightOccupied: [{\n      type: Input\n    }],\n    index: [{\n      type: Input\n    }],\n    config: [{\n      type: Input\n    }],\n    indexChange: [{\n      type: Output\n    }],\n    configChange: [{\n      type: Output\n    }],\n    customImageEvent: [{\n      type: Output\n    }],\n    nextImage: [{\n      type: HostListener,\n      args: [\"window:keyup.ArrowRight\", [\"$event\"]]\n    }],\n    prevImage: [{\n      type: HostListener,\n      args: [\"window:keyup.ArrowLeft\", [\"$event\"]]\n    }],\n    onMouseOver: [{\n      type: HostListener,\n      args: [\"mouseover\"]\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: [\"mouseleave\"]\n    }]\n  });\n})();\n\nclass AngularImageViewerModule {}\n\nAngularImageViewerModule.ɵfac = function AngularImageViewerModule_Factory(t) {\n  return new (t || AngularImageViewerModule)();\n};\n\nAngularImageViewerModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AngularImageViewerModule\n});\nAngularImageViewerModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularImageViewerModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [AngularImageViewerComponent, FullScreenDirective],\n      imports: [CommonModule],\n      exports: [AngularImageViewerComponent, FullScreenDirective]\n    }]\n  }], null, null);\n})();\n/*\n * Public API Surface of angular-image-viewer\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AngularImageViewerComponent, AngularImageViewerModule, CustomImageEvent, FullScreenDirective };","map":{"version":3,"mappings":"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","names":["CustomImageEvent","constructor","imageIndex","name","FullScreenDirective","el","ngOnChanges","changes","isFirstChange","fullscreenState","element","nativeElement","requestMethod","requestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullScreen","call","document","cancelFullscreen","webkitExitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullScreen","ngOnInit","i0","Directive","args","selector","Input","DEFAULT_CONFIG","btnClass","zoomFactor","containerBackgroundColor","wheelZoom","allowFullscreen","allowKeyboardNavigation","btnShow","zoomIn","zoomOut","rotateClockwise","rotateCounterClockwise","next","prev","btnIcons","fullscreen","AngularImageViewerComponent","sanitizer","moduleConfig","index","EventEmitter","styleHeight","transform","msTransform","oTransform","webkitTransform","loading","scale","rotation","translateX","translateY","hovered","screenHeightOccupied","merged","mergeConfig","config","triggerConfigBinding","nextImage","event","canNavigate","src","length","triggerIndexBinding","reset","prevImage","updateStyle","scrollZoom","evt","deltaY","onLoad","url","onLoadStart","imageNotFound","onDragOver","clientX","prevX","clientY","prevY","onDragStart","dataTransfer","setDragImage","target","nextElementSibling","toggleFullscreen","indexChange","emit","configChange","fireCustomEvent","customImageEvent","onMouseOver","onMouseLeave","style","defaultValues","overrideValues","result","Object","i1","i2","i3.FullScreenDirective","Component","template","styles","Optional","Inject","Output","HostListener","AngularImageViewerModule","CommonModule","NgModule","declarations","imports","exports"],"sources":["/home/mindbowser/MB/image-viewer/update-image-viewer/angular-11x-image-viewer/projects/angular-11-image-viewer/src/lib/angular-image-viewer.component.html","/home/mindbowser/MB/image-viewer/update-image-viewer/angular-11x-image-viewer/projects/angular-11-image-viewer/src/lib/models/custom-image-event-model.ts","/home/mindbowser/MB/image-viewer/update-image-viewer/angular-11x-image-viewer/projects/angular-11-image-viewer/src/lib/directives/full-screen.directive.ts","/home/mindbowser/MB/image-viewer/update-image-viewer/angular-11x-image-viewer/projects/angular-11-image-viewer/src/lib/angular-image-viewer.component.ts","/home/mindbowser/MB/image-viewer/update-image-viewer/angular-11x-image-viewer/projects/angular-11-image-viewer/src/lib/angular-image-viewer.module.ts","/home/mindbowser/MB/image-viewer/update-image-viewer/angular-11x-image-viewer/projects/angular-11-image-viewer/src/public-api.ts","/home/mindbowser/MB/image-viewer/update-image-viewer/angular-11x-image-viewer/projects/angular-11-image-viewer/src/angular-11x-image-viewer.ts"],"sourcesContent":["<div\n  [appScreenfull]=\"fullscreen\"\n  class=\"img-container\"\n  [style.backgroundColor]=\"config.containerBackgroundColor\"\n  (wheel)=\"scrollZoom($event)\"\n  (dragover)=\"onDragOver($event)\"\n>\n  <img\n  [src]=\"src[index]\"\n  [ngStyle]=\"style\"\n  alt=\"Image not found...\"\n  (dragstart)=\"onDragStart($event)\"\n  (load)=\"onLoad(src[index])\"\n  (error)=\"imageNotFound(src[index])\"\n  (loadstart)=\"onLoadStart(src[index])\"\n  />\n  <!-- Div below will be used to hide the 'ghost' image when dragging -->\n  <div></div>\n  <div class=\"spinner-container\" *ngIf=\"loading\">\n    <div class=\"spinner\"></div>\n  </div>\n\n  <button\n    type=\"button\"\n    [class]=\"config.btnClass\"\n    *ngIf=\"config.btnShow.rotateCounterClockwise\"\n    (click)=\"rotateCounterClockwise()\"\n  >\n    <span [class]=\"config.btnIcons.rotateCounterClockwise\"></span>\n  </button>\n  <button\n    type=\"button\"\n    [class]=\"config.btnClass\"\n    *ngIf=\"config.btnShow.rotateClockwise\"\n    (click)=\"rotateClockwise()\"\n  >\n    <span [class]=\"config.btnIcons.rotateClockwise\"></span>\n  </button>\n\n  <button\n    type=\"button\"\n    [class]=\"config.btnClass\"\n    *ngIf=\"config.btnShow.zoomOut\"\n    (click)=\"zoomOut()\"\n  >\n    <span [class]=\"config.btnIcons.zoomOut\"></span>\n  </button>\n  <button\n    type=\"button\"\n    [class]=\"config.btnClass\"\n    *ngIf=\"config.btnShow.zoomIn\"\n    (click)=\"zoomIn()\"\n  >\n    <span [class]=\"config.btnIcons.zoomIn\"></span>\n  </button>\n\n  <button\n    type=\"button\"\n    [class]=\"config.btnClass\"\n    *ngFor=\"let cBtn of config.customBtns\"\n    (click)=\"fireCustomEvent(cBtn.name, index)\"\n  >\n    <span [class]=\"cBtn.icon\"></span>\n  </button>\n\n  <button\n    type=\"button\"\n    id=\"ngx-fs-btn\"\n    [class]=\"config.btnClass\"\n    (click)=\"toggleFullscreen()\"\n    *ngIf=\"config.allowFullscreen\"\n  >\n    <span [class]=\"config.btnIcons.fullscreen\"></span>\n  </button>\n\n  <div class=\"nav-button-container\" *ngIf=\"src.length > 1\">\n    <button\n      type=\"button\"\n      [class]=\"config.btnClass\"\n      (click)=\"prevImage($event)\"\n      [disabled]=\"index === 0\"\n    >\n      <span [class]=\"config.btnIcons.prev\"></span>\n    </button>\n    <button\n      type=\"button\"\n      [class]=\"config.btnClass\"\n      (click)=\"nextImage($event)\"\n      [disabled]=\"index === src.length - 1\"\n    >\n      <span [class]=\"config.btnIcons.next\"></span>\n    </button>\n  </div>\n</div>\n","export class CustomImageEvent {\n  name: string;\n  imageIndex: number;\n\n  constructor(name, imageIndex) {\n    this.name = name;\n    this.imageIndex = imageIndex;\n  }\n}\n","import {\n  Directive,\n  Input,\n  ElementRef,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n} from \"@angular/core\";\n\n@Directive({\n  selector: \"[appScreenfull]\",\n})\nexport class FullScreenDirective implements OnChanges, OnInit {\n  @Input(\"appScreenfull\") fullscreenState: boolean;\n\n  constructor(private el: ElementRef) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!changes[\"fullscreenState\"].isFirstChange()) {\n      if (this.fullscreenState) {\n        const element: any = this.el.nativeElement;\n        const requestMethod =\n          element.requestFullscreen ||\n          element.webkitRequestFullScreen ||\n          element.mozRequestFullScreen ||\n          element.msRequestFullScreen;\n\n        if (requestMethod) {\n          // Native full screen.\n          requestMethod.call(element);\n        } else {\n          return null;\n        }\n      } else {\n        const element: any = document;\n        const requestMethod =\n          element.cancelFullscreen ||\n          element.webkitExitFullscreen ||\n          element.webkitCancelFullScreen ||\n          element.mozCancelFullScreen ||\n          element.msExitFullScreen;\n\n        if (requestMethod) {\n          // Native Cancel full screen.\n          requestMethod.call(element);\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  ngOnInit() {}\n}\n","import {\n  Component,\n  OnInit,\n  HostListener,\n  Optional,\n  Inject,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n} from \"@angular/core\";\nimport { ImageViewerConfig } from \"./models/image-viewer-config.model\";\nimport { CustomImageEvent } from \"./models/custom-image-event-model\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\nconst DEFAULT_CONFIG: ImageViewerConfig = {\n  btnClass: \"default\",\n  zoomFactor: 0.1,\n  containerBackgroundColor: \"#ccc\",\n  wheelZoom: false,\n  allowFullscreen: true,\n  allowKeyboardNavigation: true,\n  btnShow: {\n    zoomIn: true,\n    zoomOut: true,\n    rotateClockwise: true,\n    rotateCounterClockwise: true,\n    next: true,\n    prev: true,\n  },\n  btnIcons: {\n    zoomIn: \"fa fa-plus\",\n    zoomOut: \"fa fa-minus\",\n    rotateClockwise: \"fa fa-repeat\",\n    rotateCounterClockwise: \"fa fa-undo\",\n    next: \"fa fa-arrow-right\",\n    prev: \"fa fa-arrow-left\",\n    fullscreen: \"fa fa-arrows-alt\",\n  },\n};\n\n@Component({\n  selector: \"angular-11-image-viewer\",\n  templateUrl: \"./angular-image-viewer.component.html\",\n  styleUrls: [\"./angular-image-viewer.component.scss\"],\n})\nexport class AngularImageViewerComponent implements OnInit, OnChanges {\n  @Input()\n  src: string[];\n\n  @Input()\n  screenHeightOccupied: 0; // In Px\n\n  @Input()\n  index = 0;\n\n  @Input()\n  config: ImageViewerConfig;\n\n  @Output()\n  indexChange: EventEmitter<number> = new EventEmitter();\n\n  @Output()\n  configChange: EventEmitter<ImageViewerConfig> = new EventEmitter();\n\n  @Output()\n  customImageEvent: EventEmitter<CustomImageEvent> = new EventEmitter();\n\n  styleHeight = \"98vh\";\n\n  public style = {\n    transform: \"\",\n    msTransform: \"\",\n    oTransform: \"\",\n    webkitTransform: \"\",\n  };\n  public fullscreen = false;\n  public loading = true;\n  private scale = 1;\n  private rotation = 0;\n  private translateX = 0;\n  private translateY = 0;\n  private prevX: number;\n  private prevY: number;\n  private hovered = false;\n\n  constructor(\n    @Optional() @Inject(\"config\") public moduleConfig: ImageViewerConfig,\n    private sanitizer: DomSanitizer\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.screenHeightOccupied) {\n      this.styleHeight = \"calc(98vh - \" + this.screenHeightOccupied + \"px)\";\n    }\n  }\n\n  ngOnInit() {\n    const merged = this.mergeConfig(DEFAULT_CONFIG, this.moduleConfig);\n    this.config = this.mergeConfig(merged, this.config);\n    this.triggerConfigBinding();\n  }\n\n  @HostListener(\"window:keyup.ArrowRight\", [\"$event\"])\n  nextImage(event) {\n    if (this.canNavigate(event) && this.index < this.src.length - 1) {\n      this.loading = true;\n      this.index++;\n      this.triggerIndexBinding();\n      this.reset();\n    }\n  }\n\n  @HostListener(\"window:keyup.ArrowLeft\", [\"$event\"])\n  prevImage(event) {\n    if (this.canNavigate(event) && this.index > 0) {\n      this.loading = true;\n      this.index--;\n      this.triggerIndexBinding();\n      this.reset();\n    }\n  }\n\n  zoomIn() {\n    this.scale *= 1 + this.config.zoomFactor;\n    this.updateStyle();\n  }\n\n  zoomOut() {\n    if (this.scale > this.config.zoomFactor) {\n      this.scale /= 1 + this.config.zoomFactor;\n    }\n    this.updateStyle();\n  }\n\n  scrollZoom(evt) {\n    if (this.config.wheelZoom) {\n      evt.deltaY > 0 ? this.zoomOut() : this.zoomIn();\n      return false;\n    }\n  }\n\n  rotateClockwise() {\n    this.rotation += 90;\n    this.updateStyle();\n  }\n\n  rotateCounterClockwise() {\n    this.rotation -= 90;\n    this.updateStyle();\n  }\n\n  onLoad(url) {\n    this.loading = false;\n  }\n\n  onLoadStart(url) {\n    this.loading = true;\n  }\n\n  imageNotFound(url) {\n  }\n\n  onDragOver(evt) {\n    this.translateX += evt.clientX - this.prevX;\n    this.translateY += evt.clientY - this.prevY;\n    this.prevX = evt.clientX;\n    this.prevY = evt.clientY;\n    this.updateStyle();\n  }\n\n  onDragStart(evt) {\n    if (evt.dataTransfer && evt.dataTransfer.setDragImage) {\n      evt.dataTransfer.setDragImage(evt.target.nextElementSibling, 0, 0);\n    }\n    this.prevX = evt.clientX;\n    this.prevY = evt.clientY;\n  }\n\n  toggleFullscreen() {\n    this.fullscreen = !this.fullscreen;\n    if (!this.fullscreen) {\n      this.reset();\n    }\n  }\n\n  triggerIndexBinding() {\n    this.indexChange.emit(this.index);\n  }\n\n  triggerConfigBinding() {\n    this.configChange.next(this.config);\n  }\n\n  fireCustomEvent(name, imageIndex) {\n    this.customImageEvent.emit(new CustomImageEvent(name, imageIndex));\n  }\n\n  reset() {\n    this.scale = 1;\n    this.rotation = 0;\n    this.translateX = 0;\n    this.translateY = 0;\n    this.updateStyle();\n  }\n\n  @HostListener(\"mouseover\")\n  onMouseOver() {\n    this.hovered = true;\n  }\n\n  @HostListener(\"mouseleave\")\n  onMouseLeave() {\n    this.hovered = false;\n  }\n\n  private canNavigate(event: any) {\n    return (\n      event == null || (this.config.allowKeyboardNavigation && this.hovered)\n    );\n  }\n\n  private updateStyle() {\n    this.style.transform = `translate(${this.translateX}px, ${this.translateY}px) rotate(${this.rotation}deg) scale(${this.scale})`;\n    this.style.msTransform = this.style.transform;\n    this.style.webkitTransform = this.style.transform;\n    this.style.oTransform = this.style.transform;\n  }\n\n  private mergeConfig(\n    defaultValues: ImageViewerConfig,\n    overrideValues: ImageViewerConfig\n  ): ImageViewerConfig {\n    let result: ImageViewerConfig = { ...defaultValues };\n    if (overrideValues) {\n      result = { ...defaultValues, ...overrideValues };\n\n      if (overrideValues.btnIcons) {\n        result.btnIcons = {\n          ...defaultValues.btnIcons,\n          ...overrideValues.btnIcons,\n        };\n      }\n    }\n    return result;\n  }\n}\n","import { NgModule, ModuleWithProviders } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { AngularImageViewerComponent } from \"./angular-image-viewer.component\";\nimport { FullScreenDirective } from \"./directives/full-screen.directive\";\n\n@NgModule({\n  declarations: [AngularImageViewerComponent, FullScreenDirective],\n  imports: [CommonModule],\n  exports: [AngularImageViewerComponent, FullScreenDirective],\n})\nexport class AngularImageViewerModule {}\n","/*\n * Public API Surface of angular-image-viewer\n */\n\nexport * from './lib/angular-image-viewer.module';\nexport { AngularImageViewerComponent } from './lib/angular-image-viewer.component';\nexport { ImageViewerConfig} from './lib/models/image-viewer-config.model';\nexport { CustomImageEvent } from './lib/models/custom-image-event-model';\nexport { FullScreenDirective } from './lib/directives/full-screen.directive';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}